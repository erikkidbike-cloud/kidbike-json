name: Update JSON via dispatch

on:
  repository_dispatch:
    types: [update-json]

permissions:
  contents: write   # let GITHUB_TOKEN push commits

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Write files from client_payload
        shell: bash
        run: |
          # payload format expected:
          # {
          #   "message": "commit message",
          #   "files": [
          #     {"path":"events-we.json","content_b64":"..."},
          #     {"path":"events-wa.json","content_b64":"..."},
          #     {"path":"events-wi.json","content_b64":"..."}
          #   ]
          # }

          echo '${{ toJson(github.event.client_payload) }}' > payload.json
          jq -e '.files' payload.json >/dev/null

          for row in $(jq -c '.files[]' payload.json); do
            PATH_=$(echo "$row" | jq -r '.path')
            B64=$(echo "$row" | jq -r '.content_b64')
            # create parent dir if needed
            mkdir -p "$(dirname "$PATH_")"
            # write decoded content
            echo "$B64" | base64 --decode > "$PATH_"
            echo "Wrote $PATH_ ($(wc -c < "$PATH_") bytes)"
          done

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "${{ github.event.client_payload.message || 'update json via Flow' }}"
          git push
